import React, { useState } from 'react';
import { getRepairEstimate } from '../services/geminiService';
import type { EstimateResult } from '../types';
import { Button } from './common/Button';
import { Textarea } from './common/Textarea';
import { Card } from './common/Card';

const LoadingSpinner: React.FC = () => (
    <div className="flex items-center justify-center space-x-2">
        <div className="w-4 h-4 rounded-full animate-pulse bg-brand-lime"></div>
        <div className="w-4 h-4 rounded-full animate-pulse bg-brand-lime" style={{ animationDelay: '0.2s' }}></div>
        <div className="w-4 h-4 rounded-full animate-pulse bg-brand-lime" style={{ animationDelay: '0.4s' }}></div>
        <p className="text-gray-300">Generating your estimate...</p>
    </div>
);

const Estimate: React.FC = () => {
  const [problem, setProblem] = useState('');
  const [deviceType, setDeviceType] = useState('Desktop PC');
  const [estimate, setEstimate] = useState<EstimateResult | null>(null);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!problem.trim()) {
      setError('Please describe your computer problem.');
      return;
    }
    setError(null);
    setIsLoading(true);
    setEstimate(null);

    try {
      const result = await getRepairEstimate(problem, deviceType);
      setEstimate(result);
    } catch (err: any) {
      setError(err.message || 'An unexpected error occurred.');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="py-16 sm:py-24">
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center">
          <h2 className="text-3xl font-extrabold text-white tracking-tight sm:text-4xl">
            Get a Free AI-Powered Estimate
          </h2>
          <p className="mt-4 max-w-2xl mx-auto text-xl text-gray-400">
            Describe your issue below to receive a rough, non-binding estimate generated by AI.
          </p>
        </div>

        <Card className="mt-12">
          <form onSubmit={handleSubmit} className="space-y-6">
            <div>
              <label htmlFor="deviceType" className="block text-sm font-medium text-gray-300 mb-2">
                Type of Device
              </label>
              <select
                id="deviceType"
                value={deviceType}
                onChange={(e) => setDeviceType(e.target.value)}
                className="w-full bg-slate-700 border border-slate-600 text-white rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-brand-lime focus:border-transparent transition"
              >
                <option>Desktop PC</option>
                <option>Laptop</option>
                <option>MacBook</option>
                <option>iMac</option>
                <option>All-in-One PC</option>
              </select>
            </div>
            
            <Textarea
              id="problem"
              label="Describe the problem in detail"
              placeholder="e.g., My laptop won't turn on, it makes a clicking sound..."
              value={problem}
              onChange={(e) => setProblem(e.target.value)}
              required
            />

            <div className="text-center">
              <Button type="submit" disabled={isLoading}>
                {isLoading ? 'Thinking...' : 'Get My Estimate'}
              </Button>
            </div>
          </form>
        </Card>

        {isLoading && (
          <div className="mt-8 text-center">
            <LoadingSpinner />
          </div>
        )}

        {error && (
          <Card className="mt-8 bg-red-900/50 border-red-700">
            <p className="text-red-300 text-center font-medium">{error}</p>
          </Card>
        )}

        {estimate && (
          <Card className="mt-8 space-y-6">
            <h3 className="text-2xl font-bold text-center text-white">Your AI-Generated Estimate</h3>
            
            <div>
              <h4 className="font-semibold text-brand-lime text-lg">Potential Diagnosis</h4>
              <p className="text-gray-300 mt-1">{estimate.diagnosis}</p>
            </div>

            <div>
              <h4 className="font-semibold text-brand-lime text-lg">Recommended Actions</h4>
              <ul className="list-disc list-inside space-y-1 mt-2 text-gray-300">
                {estimate.recommended_actions.map((action, index) => (
                  <li key={index}>{action}</li>
                ))}
              </ul>
            </div>
            
            <div>
              <h4 className="font-semibold text-brand-lime text-lg">Estimated Cost Range</h4>
              <p className="text-2xl font-bold text-white mt-1">{estimate.estimated_cost_range}</p>
            </div>

            <div className="bg-slate-700/50 p-4 rounded-lg border border-slate-600">
              <p className="text-sm text-gray-400 font-semibold">{estimate.disclaimer}</p>
            </div>
          </Card>
        )}
      </div>
    </div>
  );
};

export default Estimate;